{"version":3,"sources":["webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src async","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/app-routing.module.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/app.component.css","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/app.component.html","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/app.component.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/app.module.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/company.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/companyinfo/companyinfo.component.css","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/companyinfo/companyinfo.component.html","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/companyinfo/companyinfo.component.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/dashboard/dashboard.component.css","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/dashboard/dashboard.component.html","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/dashboard/dashboard.component.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/editcompany/editcompany.component.css","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/editcompany/editcompany.component.html","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/editcompany/editcompany.component.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/http.service.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/login/login.component.css","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/login/login.component.html","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/login/login.component.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/newentry/newentry.component.css","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/newentry/newentry.component.html","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/newentry/newentry.component.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/registration/registration.component.css","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/registration/registration.component.html","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/registration/registration.component.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/user.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/environments/environment.ts","webpack:////Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { NewentryComponent } from './newentry/newentry.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CompanyinfoComponent } from './companyinfo/companyinfo.component';\nimport { EditcompanyComponent } from './editcompany/editcompany.component';\n\nconst routes: Routes = [\n  {path: \"\", pathMatch: 'full', component: LoginComponent },\n  {path: \"register\", component:  RegistrationComponent },\n  {path: \"addnew\", component: NewentryComponent},\n  {path: \"homepage\", component: DashboardComponent},\n  {path: \"information/:cat\", component: CompanyinfoComponent},\n  {path: \"dashboard\", component: DashboardComponent},\n  {path: \"editcompany/:dog\", component: EditcompanyComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<!--The whole content below can be removed with the new code.-->\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { HttpService } from './http.service';\nimport { CookieService } from 'angular2-cookie/services/cookies.service';\n\n// Importing @agm/core for Google mpas\nimport { AgmCoreModule } from '@agm/core';\n\n// Importing components\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { NewentryComponent } from './newentry/newentry.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CompanyinfoComponent } from './companyinfo/companyinfo.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { EditcompanyComponent } from './editcompany/editcompany.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    NewentryComponent,\n    DashboardComponent,\n    CompanyinfoComponent,\n    RegistrationComponent,\n    EditcompanyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyB4kOD9AMomNP4OswtJNFTkgQtJleJSNV8'   // <-- Using my API Key\n    })\n  ],\n  providers: [HttpService, CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/app.module.ts","export class Company {\n\n    constructor(\n\n        // public name: string = \"\",\n        // public url: string = \"\",\n        // public role: string = \"\",\n        // public address: object = {\n        //     street: \"\",\n        //     suite: \"\",\n        //     city: \"\",\n        //     zip: 0,\n        //     state: \"\",\n        // },\n        // public user = \"\",\n        // public contact: object = {\n        //     name: \"\",\n        //     linkedin: \"\",\n        //     contact_email: \"\",\n        //     phone: \"\",\n        //     notes: \"\",\n        // },\n        // public notes: Array<string> = [],\n        // public status = \"\"\n\n        public name: string = \"\",\n        public url: string = \"\",\n        public role: string = \"\",\n        public address: string = \"\",\n        public street: string = \"\",\n        public suite: string = \"\",\n        public city: string = \"\",\n        public zip: string = \"\",\n        public state: string = \"\",\n        public contact_name: string = \"\",\n        public notes: string = \"\",\n        public linkedin: string = \"\",\n        public contact_email: string = \"\",\n        public phone: string = \"\",\n        public note: string = \"\",\n        public status: string = \"\",\n    ){}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/company.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\nagm-map {\\n    height: 500px;\\n    width: 800px;\\n}\\n.googlemaps {\\n    /*margin: 0 auto 0 auto;*/\\n    margin-top: 10px;\\n    width: 800px;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n.nav {\\n    margin-top: 10px;\\n}\\np, a {\\n    display: block;\\n    margin-left: 15px;\\n}\\n.container {\\n    margin-bottom: 30px;\\n}\\n.displaycompany {\\n    display: inline-block;\\n    margin-left: 200px;\\n    height: 300px;\\n    width: 320px;\\n    padding: 20px;\\n}\\n.visit {\\n    display: inline-block;\\n    margin-right: 200px;\\n    height: 300px;\\n    width: 320px;\\n    padding: 20px;\\n}\\n.pull-left {\\n    margin-top: 5px;\\n}\\n.pull-right {\\n    margin-top: 5px;\\n}\\n.editbutton {\\n    margin-top: 25px;\\n    padding-right: 20px;\\n    text-align: center; \\n}\\n\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/companyinfo/companyinfo.component.css\n// module id = ../../../../../src/app/companyinfo/companyinfo.component.css\n// module chunks = 1","module.exports = \"\\n<link rel=\\\"stylesheet\\\" href=\\\"https://bootswatch.com/cerulean/bootstrap.min.css\\\">\\n\\n<div class=\\\"container\\\">\\n  <!--Nav bar to search compnanies-->\\n  <div class=\\\"nav\\\">\\n    <nav class=\\\"navbar navbar-default\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n          <form class=\\\"navbar-form navbar-right\\\" role=\\\"search\\\" method=\\\"get\\\" action=\\\"http//www.google.com/search\\\">\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search Comapany!\\\" value=\\\"\\\">\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n          </form>\\n            <div class=\\\"pull-left\\\">\\n              <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/homepage']\\\" >Back to Dashboard</a>\\n            </div>\\n        </div>\\n      </div>\\n    </nav>      \\n  </div>\\n\\n  <!--Display Google Maps-->\\n  <div class=\\\"googlemaps\\\"> \\n    <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\">\\n      <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>\\n    </agm-map>\\n  </div>\\n\\n  <!--Display Comapny details-->\\n\\n  <div class=\\\"editbutton\\\">\\n    <button (click)=\\\"editCompany()\\\" class=\\\"btn btn-default\\\">Edit Company Details</button>\\n  </div>\\n\\n  <div class=\\\"displaycompany\\\">\\n    <h2>{{displayOneComp.name}} </h2>\\n    <p>Added on <i> {{ displayOneComp.createdAt | date:\\\"longDate\\\" }} </i> </p>\\n    <p>Role: {{displayOneComp.role}}</p>\\n    <p>Notes: {{displayOneComp.notes}}</p>\\n    <p>Statu: {{displayOneComp.status}}</p>\\n    <div class=\\\"contact\\\">\\n      <h3>Contact Person</h3>\\n      <p>{{displayOneComp.contact.contact_name}}</p>\\n      <p><a href=\\\"{{displayOneComp.contact.linkedin}}\\\" *ngIf=\\\"displayOneComp.contact.linkedin\\\">LinkedIn</a></p>\\n      <p>Email: {{displayOneComp.contact.contact_email}}</p>\\n      <p>Phone: {{displayOneComp.contact.phone}}</p>\\n      <p>Notes: {{displayOneComp.contact.note}}</p>\\n    </div>\\n  </div>\\n\\n  <!--Office visit-->\\n  <div class=\\\"visit\\\">\\n    <h2>Visiting Onsite?</h2>\\n    <p>{{displayOneComp.address.street}}</p>\\n    <p>{{displayOneComp.address.suite}}</p>\\n    <p>{{displayOneComp.address.city}}, {{displayOneComp.address.state}} {{displayOneComp.address.zip}}</p>\\n    <p> <b>WEATER API here</b></p>\\n  </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/companyinfo/companyinfo.component.html\n// module id = ../../../../../src/app/companyinfo/companyinfo.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\nimport { HttpService } from './../http.service';\nimport {CookieService} from 'angular2-cookie/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Router, ActivatedRoute } from '@angular/router';  // <-- Import Activated routes for passing param in the url\n\n\n\n@Component({\n  selector: 'app-companyinfo',\n  templateUrl: './companyinfo.component.html',\n  styleUrls: ['./companyinfo.component.css']\n})\nexport class CompanyinfoComponent implements OnInit {\n\n  constructor(\n    private _cookieService: CookieService, \n    private _router: Router, \n    private _http: HttpService, \n    private _activatedRoute: ActivatedRoute) { }\n\n  param: string;\n  displayOneComp: object;\n\n  lat: number = 37.780337;\n  lng: number = -122.403408;\n\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //   center: {lat: -34.397, lng: 150.644},\n  //   zoom: 8\n  // });\n\n  showOneCompany(id){\n    console.log(\"This is the showOneCompany()\");\n    this._http.findCompany(id)\n    .then(data=>{\n      console.log(\"Finding company...\");\n      console.log(\"company data:\",data);\n      this.displayOneComp = data;\n    })\n    .catch(err=>{\n      console.log(\"Error fetching company by ID\");\n    })\n  }\n\n  editCompany(){\n\n  }\n\n\n  ngOnInit() {\n    // check if cookie is available, if not, redirect to login page\n    console.log(\"companyinfo component cookie:\",this._cookieService.get('email'));\n    if(!this._cookieService.get('email')){\n      this._router.navigate(['/']);  // end check  \n    }\n    //get the .cat in the url \n    this._activatedRoute.params.subscribe(param=>{\n      this.param = param.cat;\n      this.showOneCompany(this.param); // <- passing global var\n      console.log(param.cat);\n    });\n    \n  }   \n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/companyinfo/companyinfo.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n.mytable {\\n    width: 100%;\\n    -ms-flex-line-pack: center;\\n        align-content: center;\\n    margin-top: 30px;\\n    margin-bottom: 50px;\\n}\\n.container {\\n    margin-top: 50px;\\n}\\n.div-left {\\n    float: left;\\n    padding-left: 10px;\\n}\\n.div-right {\\n    float: right;\\n    padding-right: 10px;\\n}\\n.header {\\n    display: block;\\n}\\na, {\\n    margin-right: 15px;\\n}\\n.red {\\n    color: red;\\n}\\ntd {\\n    font-family: San Francisco, -apple-system, BlinkMacSystemFont, '.SFNSText-Regular', sans-serif;\\n    letter-spacing: -0.02em;\\n    font-size: 14px;\\n}\\n.pull-left {\\n    margin-top: 5px;\\n}\\n#logout, #prof {\\n    margin-top: 5px;\\n}\\n.btn-success , #add-new{\\n    display: block;\\n    height: 40px;\\n    border-radius: 45px;\\n    margin-top: 100px;\\n    width: 10%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = 1","module.exports = \"\\n<link rel=\\\"stylesheet\\\" href=\\\"https://bootswatch.com/cerulean/bootstrap.min.css\\\">\\n\\n<div class=\\\"container\\\"> \\n\\n    <!--Top navigation bar-->\\n  <div class=\\\"nav\\\">\\n    <nav class=\\\"navbar navbar-default\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n          <div class=\\\"pull-left\\\" id=\\\"prof\\\"> \\n            <a class=\\\"btn btn-info\\\" [routerLink]=\\\"['/homepage']\\\" >User Profile</a>\\n          </div>\\n          <div class=\\\"pull-right\\\" id=\\\"logout\\\">\\n            <button class=\\\"btn btn-warning\\\" (click)=\\\"logOut()\\\">Logout</button>\\n          </div>\\n        </div>\\n      </div>\\n    </nav>      \\n  </div>  \\n\\n  <div class=\\\"header\\\">\\n      <div class=\\\"div-left\\\">\\n        <h1>Welcome, {{ currentUserName }}</h1>\\n      </div>\\n      <div class=\\\"div-right\\\">\\n        <h3>Job Search</h3>\\n          <a href=\\\"http://www.linkedin.com\\\">LinkedIn |</a>\\n          <a href=\\\"http://www.indeed.com\\\">Indeed |</a>\\n          <a href=\\\"http://www.monster.com\\\">Monster</a>\\n      </div>\\n  </div>\\n  <div>\\n    <a id=\\\"addnew\\\" [routerLink]=\\\"['/addnew']\\\" class=\\\"btn btn-success\\\">Add New +</a> \\n  </div>\\n  <div class=\\\"mytable\\\">\\n    <table class=\\\"table table-striped table-hover \\\">\\n      <tr>\\n        <th>Company Name</th>\\n        <th>Position</th>\\n        <th>Date Added</th>\\n        <th>Status</th>\\n        <th>Notes</th>\\n        <th>Action</th>\\n      </tr>\\n          <tr class=\\\"success\\\" *ngFor=\\\"let company of fetchedRecords\\\">\\n              <td><a [routerLink]=\\\"['/information', company._id]\\\"> {{company.name}} </a></td>\\n              <td>{{company.role}}</td>\\n              <td>{{company.createdAt | date:'longDate' }}</td>\\n              <td>{{company.status}}</td>\\n              <td>{{company.notes}}</td>\\n              <td><a class=\\\"red\\\" (click)=\\\"delete(company._id)\\\">Delete</a></td> \\n          </tr>\\n    </table>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n\nimport { HttpService } from './../http.service';\nimport {CookieService} from 'angular2-cookie/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private _cookieService: CookieService, private _router: Router, private _http: HttpService){}\n\n  loggedUser = this._cookieService.get(\"email\");\n  currentUserName: string;\n\n  fetchedRecords = [];\n\n\n  collectCompanies(){\n    this._http.findAllCompanies({email: this.loggedUser})\n    .then(data=>{\n      console.log(\"Companies collected\");\n      this.fetchedRecords = data;\n    })\n    .catch(err=>{\n      console.log(\"Error fetching records to the dashboard\");\n    });\n  }\n\n  delete(id){\n    console.log(\"ID is:\",id);\n    this._http.deleteCompany(id)\n    .then(data => {\n      console.log(\"Deleting\");\n      this.collectCompanies();\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n\n\n  helloMessage(){\n    this._http.findUser({email: this.loggedUser})\n    .then(data=> {\n      console.log(\"Found user\", data);\n      this.currentUserName = data.first_name;\n    })\n    .catch(err=>{\n      console.log(\"Error findin user\");\n    })\n  }\n\n  logOut(){\n    console.log(\"logOut() from dashbaord.comp invoked\")\n    this._cookieService.removeAll();\n    this._router.navigate(['/']);\n  }\n\n  ngOnInit() {\n      console.log(\"Dashboard comp\",this._cookieService.get('email'))\n      if (this.loggedUser == undefined){\n        this._router.navigate(['/']);\n      }\n      this.helloMessage();\n      this.collectCompanies();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/editcompany/editcompany.component.css\n// module id = ../../../../../src/app/editcompany/editcompany.component.css\n// module chunks = 1","module.exports = \"\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/editcompany/editcompany.component.html\n// module id = ../../../../../src/app/editcompany/editcompany.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-editcompany',\n  templateUrl: './editcompany.component.html',\n  styleUrls: ['./editcompany.component.css']\n})\nexport class EditcompanyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/editcompany/editcompany.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class HttpService {\n\n  constructor(private _http: Http) { }\n  \n  //CRUD! talk to back end:\n\n  /* USERS */\n  //add user to db\n  addUser(user) {\n    console.log('reached http/addUser - ', user);\n    return this._http.post('/new_user', user)\n    .map((data) => data.json())\n    .toPromise();\n  }\n  // //find user by email\n  // {email: \"\"}\n  findUser(email){\n    console.log('reached http/findUser()');\n    console.log(email);\n    return this._http.post('/user', email)\n    .map((data) => data.json())\n    .toPromise();\n  }\n\n  /* COMPANIES */\n  //add new company to db\n  addCompany(company){\n    console.log('reached http/addCompany - ', \n    company);\n    return this._http.post('/new_company', company)\n    .map((data) => data.json())\n    .toPromise();\n  }\n  //find all companies\n  findAllCompanies(user_email){\n    console.log('reached http/findAllCompanies()');\n    console.log('/companies');\n    return this._http.post('/companies/', user_email)\n    .map((data) => data.json())\n    .toPromise();\n  }\n  //find company by id - as url param\n  findCompany(id){\n    console.log('reached http/findCompany()');\n    console.log('/company/'+id);\n    return this._http.get('/company/'+id)\n    .map((data) => data.json())\n    .toPromise();\n  }\n\n  deleteCompany(id){\n    console.log(\"reached the http.service deleteCompany()\")\n    return this._http.get('/delete_company/'+id)\n    .map((data)=>{\n      data.json()\n    })\n    .toPromise();\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/http.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\nh1 {\\n    margin-bottom: 50px;\\n}\\n.form-horizontal {\\n    background-color: mintcream;\\n    padding: 25px;\\n    border-radius: 25px;\\n}\\n.red {\\n    color: red;\\n    font-size: 14px;\\n\\n}\\n.linktoregister {\\n    margin-top: 40px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = 1","module.exports = \"\\n<link rel=\\\"stylesheet\\\" href=\\\"https://bootswatch.com/cerulean/bootstrap.min.css\\\">\\n\\n<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <h1>Welcome to our App!</h1>\\n  <div class=\\\"loginform\\\">\\n    <form class=\\\"form-horizontal\\\" #myform=\\\"ngForm\\\" (submit)=\\\"login(myform)\\\">\\n      <fieldset>\\n        <legend>Login Here</legend>\\n\\n        <div class=\\\"red\\\" *ngIf=\\\"invalidPass\\\">\\n          <p>Invalid Password. Please try again.</p>\\n        </div>\\n      \\n        <!--Username-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\" class=\\\"col-lg-2 control-label\\\">Email:</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"your@email.com\\\"\\n            required\\n            [(ngModel)]=\\\"userLogging.email\\\"\\n            #email=\\\"ngModel\\\">\\n          </div>\\n            <div class=\\\"red\\\" *ngIf=\\\"email.errors && ( email.touched || myform.submitted )\\\">\\n              <p *ngIf=\\\"email.errors.required\\\">Email is required</p>\\n            </div>\\n        </div> \\n\\n        <!--Password-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\" class=\\\"col-lg-2 control-label\\\">Password</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Please enter your password\\\"\\n            required\\n            [(ngModel)]=\\\"userLogging.password\\\"\\n            #password=\\\"ngModel\\\">\\n          </div>\\n            <div class=\\\"red\\\" *ngIf=\\\"password.errors && ( password.touched || myform.submitted )\\\">\\n              <p *ngIf=\\\"password.errors.required\\\">Password is required</p>\\n            </div>\\n        </div> \\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Login</button>   \\n\\n          <!--If user is not registered-->\\n          <div class=\\\"linktoregister\\\">\\n            <h4>Not registered?</h4>\\n            <h5>Register \\n            <a [routerLink]=\\\"['/register']\\\">here</a>\\n            </h5>\\n          </div> \\n      </fieldset>\\n    </form>\\n  </div>\\n</div>  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\nimport {CookieService} from 'angular2-cookie/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { HttpService } from './../http.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private _cookieService: CookieService, private _http: HttpService, private _router: Router) { }\n\n  userLogging = {\n    email: \"\",\n    password: \"\"\n  }\n\n  invalidPass = false;\n  userNotInDatabase = false;\n\n  // Check if user exists in the database\n  // searchifUserExist(form){\n  //   console.log(\"checking if user exist in the database\");\n  //   this._http.findUser({email: this.userLogging.email})\n  //   .then(data=>{\n  //     console.log(\"data from searchExists:\", data)\n  //   })\n  //   .catch(err=>{\n  //     console.log(\"User does not exist, cannot login\")\n  //   })\n  //   form.resetForm();\n  // }\n\n\n\n  login(){\n    console.log(\"Reached login() in the login.comp\")\n    var email = {email: this.userLogging.email};\n    var pass = \"\";\n    console.log(email);\n    this._http.findUser(email)\n    .then(data => {\n      console.log(\"Found:\", data);\n      pass = data.password;\n      if(pass == this.userLogging.password){\n        this._cookieService.put(\"email\", this.userLogging.email)\n        console.log('!!!');\n        this._router.navigate(['/homepage']);\n      } else {\n        console.log(\":( password invalid\");\n        this.invalidPass = true;\n      }\n    })\n    .catch(err =>{\n      console.log(\"Error finding user by email\")\n    })\n  }\n\n\n\n  ngOnInit() {\n    console.log(\"In the login component. Cookie is: \", this._cookieService.get(\"email\"))\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.form-horizontal, newentrycomponent {\\n    display: inline-block;\\n    margin-top: 50px;\\n    width: 60%;\\n}\\n.dashboardcomponent {\\n    margin-top: 30px;\\n    margin-bottom: 30px;\\n}\\nlegend {\\n    margin-top: 20px;\\n}\\n.red {\\n    color: red;\\n    font-size: 14px;\\n    margin-top: 5px;\\n}\\n.pull-left {\\n    margin-top: 5px;\\n}\\n.nav {\\n    margin-top: 20px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/newentry/newentry.component.css\n// module id = ../../../../../src/app/newentry/newentry.component.css\n// module chunks = 1","module.exports = \"\\n<link rel=\\\"stylesheet\\\" href=\\\"https://bootswatch.com/cerulean/bootstrap.min.css\\\">\\n<div class=\\\"container\\\">\\n\\n  <!--top navigation bar-->\\n  <div class=\\\"nav\\\">\\n    <nav class=\\\"navbar navbar-default\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n          <div class=\\\"pull-left\\\">\\n            <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/homepage']\\\" >Back to Dashboard</a>\\n          </div>\\n        </div>\\n      </div>\\n    </nav>      \\n  </div>  \\n\\n\\n    <div class=\\\"newentrycomponent\\\">\\n      <!--From to add new Entry-->\\n      <form class=\\\"form-horizontal\\\" #myform=\\\"ngForm\\\" (submit)=\\\"addCompany(myform)\\\">\\n        <fieldset>\\n          <legend>Add New Job Entry</legend>\\n\\n          <!--display when submitted with invalid field\\n          <div class=\\\"red\\\" *ngIf=\\\"failToSubmit\\\">\\n            <i>**Please check all red fields.</i>\\n          </div>-->\\n\\n          <!--Company name-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"company\\\" class=\\\"col-lg-2 control-label\\\">Company:</label>\\n            <div class=\\\"col-lg-10\\\">\\n              <input type=\\\"text\\\" name=\\\"company\\\" class=\\\"form-control\\\" placeholder=\\\"Agency, Employer, etc.\\\"\\n              required\\n              [(ngModel)]=\\\"newCompany.name\\\"\\n              #company=\\\"ngModel\\\">  \\n              <div class=\\\"red\\\" *ngIf=\\\"company.errors && (company.touched || myform.submitted)\\\">\\n                <p *ngIf=\\\"company.errors.required\\\">Company name is required.</p>\\n              </div>   \\n            </div> \\n          </div>\\n\\n          <!--Position Applied-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"role\\\" class=\\\"col-lg-2 control-label\\\">Position:</label>\\n            <div class=\\\"col-lg-10\\\">\\n              <input type=\\\"text\\\" name=\\\"role\\\" class=\\\"form-control\\\" placeholder=\\\"ex: Software Enginner\\\"\\n              required\\n              [(ngModel)]=\\\"newCompany.role\\\"\\n              #role=\\\"ngModel\\\">  \\n              <div class=\\\"red\\\" *ngIf=\\\"role.errors && (role.touched || myform.submitted)\\\">\\n                <p *ngIf=\\\"role.errors.required\\\">Position applied is required.</p>\\n              </div>     \\n            </div> \\n          </div>        \\n          <!--Link URL-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"url\\\" class=\\\"col-lg-2 control-label\\\">Link:</label>\\n            <div class=\\\"col-lg-10\\\">\\n              <input type=\\\"text\\\" name=\\\"url\\\" class=\\\"form-control\\\" placeholder=\\\"www.job.com\\\"\\n              [(ngModel)]=\\\"newCompany.url\\\">     \\n            </div> \\n          </div>    \\n          <!--Address of the company-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"street\\\" class=\\\"col-lg-2 control-label\\\">Street</label>\\n            <div class=\\\"col-lg-10\\\">\\n              <input type=\\\"text\\\" name=\\\"street\\\" class=\\\"form-control\\\" placeholder=\\\"ex: 400 Main Ave.\\\"\\n              [(ngModel)]=\\\"newCompany.street\\\"\\n              #street=\\\"ngModel\\\"> \\n            </div> \\n          </div> \\n                <!--Suite-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"Suite\\\" class=\\\"col-lg-2 control-label\\\">Office Suite:</label>\\n            <div class=\\\"col-lg-10\\\">\\n                <input type=\\\"text\\\" name=\\\"suite\\\" class=\\\"form-control\\\" placeholder=\\\"Suite #\\\"\\n                [(ngModel)]=\\\"newCompany.suite\\\">\\n            </div>\\n          </div>\\n                <!--City-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"city\\\" class=\\\"col-lg-2 control-label\\\">City:</label>\\n            <div class=\\\"col-lg-10\\\">\\n                <input type=\\\"text\\\" name=\\\"city\\\" class=\\\"form-control\\\" placeholder=\\\"City\\\"\\n                [(ngModel)]=\\\"newCompany.city\\\">\\n            </div>\\n          </div>        \\n                <!--Zip Code-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"zip\\\" class=\\\"col-lg-2 control-label\\\">Zip Code:</label>\\n            <div class=\\\"col-lg-10\\\">\\n              <input type=\\\"text\\\" name=\\\"zip\\\" class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"newCompany.zip\\\"\\n              >\\n            </div>\\n          </div>\\n                <!--Choose State-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\" class=\\\"col-lg-2 control-label\\\">State:</label>\\n              <div class=\\\"col-lg-10\\\">\\n                <select name=\\\"state\\\" class=\\\"form-control\\\" id=\\\"select\\\"\\n                [(ngModel)]=\\\"newCompany.state\\\"\\n                >\\n                  <option value=\\\"AL\\\">Alabama</option>\\n                  <option value=\\\"AK\\\">Alaska</option>\\n                  <option value=\\\"AZ\\\">Arizona</option>\\n                  <option value=\\\"AR\\\">Arkansas</option>\\n                  <option value=\\\"CA\\\">California</option>\\n                  <option value=\\\"CO\\\">Colorado</option>\\n                  <option value=\\\"CT\\\">Connecticut</option>\\n                  <option value=\\\"DE\\\">Delaware</option>\\n                  <option value=\\\"FL\\\">Florida</option>\\n                  <option value=\\\"GA\\\">Georgia</option>\\n                  <option value=\\\"HI\\\">Hawaii</option>\\n                  <option value=\\\"ID\\\">Idaho</option>\\n                  <option value=\\\"IL\\\">Illinois</option>\\n                  <option value=\\\"IN\\\">Indiana</option>\\n                  <option value=\\\"IA\\\">Iowa</option>\\n                  <option value=\\\"KS\\\">Kansas</option>\\n                  <option value=\\\"KY\\\">Kentucky</option>\\n                  <option value=\\\"LA\\\">Louisiana</option>\\n                  <option value=\\\"ME\\\">Maine</option>\\n                  <option value=\\\"MD\\\">Maryland</option>\\n                  <option value=\\\"MA\\\">Massachusetts</option>\\n                  <option value=\\\"MI\\\">Michigan</option>\\n                  <option value=\\\"MN\\\">Minnesota</option>\\n                  <option value=\\\"MS\\\">Mississippi</option>\\n                  <option value=\\\"MO\\\">Missouri</option>\\n                  <option value=\\\"MT\\\">Montana</option>\\n                  <option value=\\\"NE\\\">Nebraska</option>\\n                  <option value=\\\"NV\\\">Nevada</option>\\n                  <option value=\\\"NH\\\">New Hampshire</option>\\n                  <option value=\\\"NJ\\\">New Jersey</option>\\n                  <option value=\\\"NM\\\">New Mexico</option>\\n                  <option value=\\\"NY\\\">New York</option>\\n                  <option value=\\\"NC\\\">North Carolina</option>\\n                  <option value=\\\"ND\\\">North Dakota</option>\\n                  <option value=\\\"OH\\\">Ohio</option>\\n                  <option value=\\\"OK\\\">Oklahoma</option>\\n                  <option value=\\\"OR\\\">Oregon</option>\\n                  <option value=\\\"PA\\\">Pennsylvania</option>\\n                  <option value=\\\"RI\\\">Rhode Island</option>\\n                  <option value=\\\"SC\\\">South Carolina</option>\\n                  <option value=\\\"SD\\\">South Dakota</option>\\n                  <option value=\\\"TN\\\">Tennessee</option>\\n                  <option value=\\\"TX\\\">Texas</option>\\n                  <option value=\\\"UT\\\">Utah</option>\\n                  <option value=\\\"VT\\\">Vermont</option>\\n                  <option value=\\\"VA\\\">Virginia</option>\\n                  <option value=\\\"WA\\\">Washington</option>\\n                  <option value=\\\"WV\\\">West Virginia</option>\\n                  <option value=\\\"WI\\\">Wisconsin</option>\\n                  <option value=\\\"WY\\\">Wyoming</option>\\n                </select> \\n              </div> \\n          </div>\\n\\n            <!--Application Status-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\" class=\\\"col-lg-2 control-label\\\">Application Status:</label>\\n              <div class=\\\"col-lg-10\\\">\\n                <select name=\\\"status\\\" class=\\\"form-control\\\" id=\\\"select\\\"\\n                required\\n                [(ngModel)]=\\\"newCompany.status\\\"\\n                #status=\\\"ngModel\\\">\\n                  <option value=\\\"Contacted\\\">Contacted</option>\\n                  <option value=\\\"Applied\\\">Applied</option>\\n                  <option value=\\\"Interview Set\\\">Interview Set</option>\\n                  <option value=\\\"Interviewed\\\">Interviewed</option>\\n                  <option value=\\\"Rejected\\\">Rejected</option>\\n                </select>\\n                <div class=\\\"red\\\" *ngIf=\\\"status.errors && (status.touched || myform.submitted)\\\">\\n                  <p>Please make a selection</p>\\n                </div>\\n              </div>  \\n          </div>\\n\\n          <!--Notes about the Company-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"notes\\\" class=\\\"col-lg-2 control-label\\\">Notes:</label>\\n            <div class=\\\"col-lg-10\\\">\\n              <textarea name=\\\"notes\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"form-control\\\" placeholder=\\\"Enter notes about this job.\\\"\\n              [(ngModel)]=\\\"newCompany.notes\\\"\\n              ></textarea>    \\n            </div> \\n          </div>         \\n\\n          <legend>Contact Information</legend>\\n          <!--Contact Name-->\\n          <div class=\\\"form-group\\\"> \\n            <label for=\\\"contact\\\" class=\\\"col-lg-2 control-label\\\">Contact Person:</label>\\n            <div class=\\\"col-lg-10\\\">\\n              <input type=\\\"text\\\" name=\\\"contact_name\\\" class=\\\"form-control\\\" placeholder=\\\"Recruiter, Hiring Manager, etc.\\\"\\n              required\\n              [(ngModel)]=\\\"newCompany.contact_name\\\"\\n              #contact_name = \\\"ngModel\\\">\\n              <div class=\\\"red\\\" *ngIf=\\\"contact_name.errors && (contact_name.touched || myform.submitted)\\\">\\n                <p>Please enter your contact person's name</p>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!--Contact Phone-->\\n          <div class=\\\"form-group\\\"> \\n            <label for=\\\"phone\\\" class=\\\"col-lg-2 control-label\\\">Phone::</label>\\n            <div class=\\\"col-lg-10\\\">\\n              <input type=\\\"text\\\" name=\\\"phone\\\" class=\\\"form-control\\\" placeholder=\\\"888-888-8888\\\"\\n              [(ngModel)]=\\\"newCompany.phone\\\"\\n              >\\n            </div>\\n          </div>\\n\\n          <!--Contact Email-->\\n          <div class=\\\"form-group\\\"> \\n            <label for=\\\"contact\\\" class=\\\"col-lg-2 control-label\\\">Email:</label>\\n            <div class=\\\"col-lg-10\\\">\\n              <input type=\\\"text\\\" name=\\\"contact_email\\\" class=\\\"form-control\\\" placeholder=\\\"contact@company.com\\\"\\n              pattern = \\\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$\\\"\\n              [(ngModel)]=\\\"newCompany.contact_email\\\"\\n              #contact_email = \\\"ngModel\\\">\\n              <div class=\\\"red\\\" *ngIf=\\\"contact_email.errors && contact_email.touched\\\">\\n                <p *ngIf=\\\"contact_email.errors.pattern\\\">Please enter a valid email address</p>\\n              </div>\\n            </div>\\n          </div>                    \\n\\n          <!--linkedIn-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"linkedin\\\" class=\\\"col-lg-2 control-label\\\">Contact linkedIn:</label>\\n            <div class=\\\"col-lg-10\\\">\\n              <input type=\\\"text\\\" name=\\\"linkedin\\\" class=\\\"form-control\\\" placeholder=\\\"**optional\\\"\\n              [(ngModel)]=\\\"newCompany.linkedin\\\"\\n              >     \\n            </div> \\n          </div>   \\n\\n          <!--Notes-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"notes\\\" class=\\\"col-lg-2 control-label\\\">Notes:</label>\\n            <div class=\\\"col-lg-10\\\">\\n              <textarea name=\\\"note\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"form-control\\\" placeholder=\\\"Notes about the contact person\\\"\\n              [(ngModel)]=\\\"newCompany.note\\\"\\n              ></textarea>    \\n            </div> \\n          </div> \\n\\n          <!--Submit Button-->\\n          <div class=\\\"form-group\\\" style=\\\"text-align:center;\\\">\\n            <button [disabled]=\\\"!myform.form.valid\\\"  type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"text-align:center\\\">Submit</button>\\n          </div>\\n        </fieldset>\\n      </form>\\n      <!--End Form-->\\n    </div>\\n\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/newentry/newentry.component.html\n// module id = ../../../../../src/app/newentry/newentry.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\nimport {CookieService} from 'angular2-cookie/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { HttpService } from './../http.service';\nimport { Company } from './../company';\n\n\n@Component({\n  selector: 'app-newentry',\n  templateUrl: './newentry.component.html',\n  styleUrls: ['./newentry.component.css']\n})\nexport class NewentryComponent implements OnInit {\n\n  constructor(private _cookieService: CookieService, private _http: HttpService, private _router: Router) { }\n\n  loggedUserCookie = this._cookieService.get('email');\n  newCompany = new Company();\n  // failToSubmit = false;\n  isFormValid: boolean;\n\n\n  addCompany(form){\n    console.log(\"this.newCompany: \", form)\n    if(!form.valid){\n      this.isFormValid = false;\n      console.log(\"error with the new entry form\");\n      // this.failToSubmit = true\n      return;\n    } else {\n      console.log(\"Adding Company:\", form)\n      var new_company = {\n        name: this.newCompany.name,\n        url: this.newCompany.url,\n        role: this.newCompany.role,\n        address: {\n          street: this.newCompany.street,\n          suite: this.newCompany.suite,\n          city: this.newCompany.city,\n          zip: this.newCompany.zip,\n          state: this.newCompany.state\n        },\n        user: this.loggedUserCookie,\n        status: this.newCompany.status,\n        notes: this.newCompany.notes,\n        contact: {\n          contact_name: this.newCompany.contact_name,\n          linkedin: this.newCompany.linkedin,\n          contact_email: this.newCompany.contact_email,\n          phone: this.newCompany.phone,\n          note: this.newCompany.note\n        }\n      }\n      console.log(\"Forced New Company:\", new_company);\n      this._http.addCompany(new_company)\n      .then(data=>{\n        console.log(\"Success\")\n        this._router.navigate(['/homepage'])\n        form.resetForm()\n      })\n      .catch(err=>{\n        console.log(\"Error adding company\")\n      })\n    }\n  }\n\n\n\n\n\n  ngOnInit() {\n\n    // check if cookie is available, if not, redirect to login page\n    console.log(\"newentry comp cookie:\",this._cookieService.get('email'));\n    if(!this._cookieService.get('email')){\n      this._router.navigate(['/']);\n    }\n  } // end check\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/newentry/newentry.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.form-horizontal {\\n    margin-top: 50px;\\n    background-color: lavender;\\n    padding: 25px;\\n    border-radius: 25px;  \\n    \\n}\\nbutton {\\n    margin-top: 20px;  \\n}\\n.red {\\n    color: red;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/registration/registration.component.css\n// module id = ../../../../../src/app/registration/registration.component.css\n// module chunks = 1","module.exports = \"\\n<link rel=\\\"stylesheet\\\" href=\\\"https://bootswatch.com/cerulean/bootstrap.min.css\\\">\\n<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <div class=\\\"registration\\\">\\n\\n    <form class=\\\"form-horizontal\\\" #myform=\\\"ngForm\\\" (submit)=\\\"submitRegForm(myform)\\\">\\n      <fieldset>\\n        <legend>Registration</legend>\\n\\n              <!--If form is submitted, but invalid, display this message-->\\n          <div class=\\\"red\\\" *ngIf=\\\"failBool\\\">\\n            <p>Form is invalid. Please try again. </p>\\n          </div>\\n\\n        <!--First Name-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"fname\\\" class=\\\"col-lg-2 control-label\\\">First Name:</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" name=\\\"fname\\\" class=\\\"form-control\\\" placeholder=\\\"Your first name\\\"\\n            required\\n            [(ngModel)]=\\\"newuser.firstname\\\"\\n            #fname=\\\"ngModel\\\">     \\n          </div >\\n            <div class=\\\"red\\\" *ngIf=\\\"fname.errors && (fname.touched || myform.submitted)\\\">\\n              <p *ngIf=\\\"fname.errors.required\\\">This field must not be blank</p>\\n            </div>\\n        </div>\\n\\n        <!--Last Name-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"lname\\\" class=\\\"col-lg-2 control-label\\\">Last Name:</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\"  class=\\\"form-control\\\" name=\\\"lname\\\" placeholder=\\\"Your last name\\\"\\n            required\\n            [(ngModel)]=\\\"newuser.lastname\\\"\\n            #lname=\\\"ngModel\\\">\\n          </div>\\n            <div class=\\\"red\\\" *ngIf=\\\"lname.errors && (lname.touched || myform.submitted)\\\">\\n              <p *ngIf=\\\"lname.errors.required\\\">This field must not be blank</p>\\n            </div>\\n        </div>\\n\\n        <!--Email-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\" class=\\\"col-lg-2 control-label\\\">Email:</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"your@email.com\\\"\\n            required\\n            pattern = \\\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$\\\"\\n            [(ngModel)]=\\\"newuser.email\\\"\\n            #email=\\\"ngModel\\\">\\n          </div>\\n            <div class=\\\"red\\\" *ngIf=\\\"email.errors && (email.touched || myform.submitted)\\\">\\n              <p *ngIf=\\\"email.errors.required\\\">This field must not be blank</p>\\n              <p *ngIf=\\\"email.errors.pattern\\\">Please enter a valid email address</p>\\n            </div>\\n        </div>     \\n\\n        <!--Password -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\" class=\\\"col-lg-2 control-label\\\">Password</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Must be between 8-12 characters\\\"\\n            required\\n            minlength=\\\"8\\\"\\n            maxlength=\\\"12\\\"\\n            [(ngModel)]=\\\"newuser.password\\\"\\n            #password=\\\"ngModel\\\">\\n          </div>\\n            <div class=\\\"red\\\" *ngIf=\\\"password.errors && (password.touched || myform.submitted)\\\">\\n              <p *ngIf=\\\"password.errors.required\\\">This field must not be blank</p>\\n              <p *ngIf=\\\"password.errors.minlength || password.errors.maxlength\\\">Password should be between 8-12 characters</p>\\n            </div>\\n        </div>\\n\\n        <!--Confirm Password -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"confirmpw\\\" class=\\\"col-lg-2 control-label\\\">Confirm Password:</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmpassword\\\" placeholder=\\\"Passwords must match\\\"\\n            [(ngModel)]=\\\"newuser.confirmpassword\\\"\\n            #confirmpassword=\\\"ngModel\\\">\\n          </div>\\n            <div class=\\\"red\\\" *ngIf=\\\"password.value !== confirmpassword.value && myform.submitted\\\">\\n              <p>Password are not matching!</p>\\n            </div>\\n        </div>\\n\\n        <h4> Already Registered?</h4>\\n        <h5>\\n          <a [routerLink]=\\\"['/']\\\"> Go Back</a>\\n        </h5>\\n        <button  class=\\\"btn btn-primary\\\">Register!</button>      \\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/registration/registration.component.html\n// module id = ../../../../../src/app/registration/registration.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { User } from './../user';\n\nimport { HttpService } from './../http.service';\nimport { CookieService } from 'angular2-cookie/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(private _router: Router, private _cookieService:CookieService, private _http: HttpService) { }\n\n  newuser = new User();\n  failBool: boolean;\n\n\n  submitRegForm(form){\n\n    if(!form.valid || this.newuser.password !== this.newuser.confirmpassword){\n      this.invalidForm();\n      return;\n    } else {\n      this._cookieService.put('email', this.newuser.email);\n      console.log(\"the cookie is:\", this._cookieService.get('email'));\n      this._http.addUser(this.newuser)\n      .then(data =>{\n        console.log(\"Created user into the database: \", this.newuser);\n      })\n      .catch(err =>{\n        console.log(\"Error adding user who is trying to register.\");\n      })\n      this._router.navigate(['/homepage']);\n    }\n  }\n\n  // This function sets the boolean to true so we can display a div in the html\n  invalidForm(){\n    console.log(\"Invalid Form, or passwords are not matching\");\n    this.failBool = true;\n  }\n\n\n\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/registration/registration.component.ts","export class User {\n\n    constructor(\n        public firstname: string = \"\",\n        public lastname: string = \"\",\n        public email: string = \"\",\n        public password: string = \"\",\n        public confirmpassword: string = \"\",\n    ){\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/app/user.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/marvinalganes/Desktop/mean_stack/fullMean/mean-job/public/src/main.ts"],"sourceRoot":""}